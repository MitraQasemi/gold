generator client {
  provider       = "prisma-client-js"
  previewFeature = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String             @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String             @default("")
  lastName          String             @default("")
  phoneNumber       String             @unique
  password          String
  refreshToken      String             @default("")
  blocked           Boolean            @default(false)
  age               Int                @default(0)
  walletBalance     Int                @default(0)
  goldBalance       Float              @default(0.000)
  countryCode       Int                @default(0)
  addresses         Address[]
  Cart              Cart?
  goldTransaction   goldTransaction?
  walletTransaction walletTransaction?
}

type Address {
  country String
  city    String
  address String
}

model Cart {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  userId     String   @unique @db.ObjectId
  user       User     @relation(fields: [userId], references: [id])
  productsId String[] @db.ObjectId
  product    Product  @relation(fields: [productsId], references: [id])
  varientId  String   @db.ObjectId
}

model Product {
  id             String      @id @default(auto()) @map("_id") @db.ObjectId
  title          String      @default("product")
  description    String      @default("")
  category       String      @default("")
  tags           String[]
  image          String[]
  thumbnailImage String      @default("")
  wage           Int         @default(0)
  weight         Int         @default(0)
  weightUnit     Int         @default(0)
  quantity       Int         @default(0)
  lockQuantity   Int         @default(0)
  discount       Int         @default(0)
  metaData       MetaData[]
  installment    Installment
  varients       Varient[]
  Cart           Cart[]
}

model Category {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String @default("")
  category String @unique
  parent   String @default("")
  slug     String @default("")
}

type MetaData {
  property String
  value    String
}

type Installment {
  available Boolean
  minWeight Int
  deadLine  Int
}

type Varient {
  varientId    String      @db.ObjectId
  varients     String[]
  wage         Int
  weight       Int
  quantity     Int
  lockQuantity Int
  discount     Int
  installment  Installment
}

model Admin {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String @unique
  password     String
  permissions  String @default("[]")
  refreshToken String @default("")
}

model config {
  id        String @id @default(auto()) @map("_id") @db.ObjectId
  startAt   String @default("")
  endAt     String @default("")
  maxWeight Float  @default(0.000)
}

model goldTransaction {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @unique @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  date           DateTime @default(now())
  expense        Int
  status         String
  paymentGateway String
  details        String
}

model walletTransaction {
  id             String   @id @default(auto()) @map("_id") @db.ObjectId
  userId         String   @unique @db.ObjectId
  user           User     @relation(fields: [userId], references: [id])
  date           DateTime @default(now())
  expense        Int
  status         String
  paymentGateway String
  title          String
  weight         Float
  quotation      Float
  details        String
}

model goldPrice {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  date          DateTime @default(now())
  buyQuotation  Int
  sellQuotation Int
}
