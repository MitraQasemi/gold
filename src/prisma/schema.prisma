generator client {
  provider       = "prisma-client-js"
  previewFeature = ["mongodb"]
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(auto()) @map("_id") @db.ObjectId
  firstName         String              @default("")
  lastName          String              @default("")
  phoneNumber       String              @unique
  password          String
  refreshToken      String              @default("")
  blocked           Boolean             @default(false)
  age               Int                 @default(0)
  walletBalance     Float               @default(0.000)
  goldBalance       Float               @default(0.000)
  countryCode       String              @default("+98")
  addresses         Address[]
  cart              Cart?
  goldTransaction   goldTransaction[]
  walletTransaction walletTransaction[]
  order             order[]
}

type Address {
  province   String
  city       String
  address    String
  postalCode String
  plaque     String
}

model Cart {
  id       String        @id @default(auto()) @map("_id") @db.ObjectId
  userId   String        @unique @db.ObjectId
  user     User          @relation(fields: [userId], references: [id])
  products cartProduct[]
}

type cartProduct {
  productId String @db.ObjectId
  variantId Int
  count     Int    @default(0)
}

model Product {
  id               String      @id @default(auto()) @map("_id") @db.ObjectId //
  date             DateTime    @default(now())
  title            String      @default("product") //
  description      String      @default("")
  category         String      @default("")
  tags             String[]
  image            String[]
  thumbnailImage   String      @default("") //
  wage             Float       @default(0) //
  sellQuantity     Int         @default(0)
  profitPercentage Float       @default(0.000) //
  weight           Float       @default(0.000) //
  weightUnit       String      @default("") //
  quantity         Int         @default(0)
  lockQuantity     Int         @default(0)
  discount         Float       @default(0) //
  metaData         MetaData[]
  installment      Installment
  variants         Variant[]
}

model Category {
  id       String @id @default(auto()) @map("_id") @db.ObjectId
  name     String @default("")
  category String @unique
  parent   String @default("")
  slug     String @default("")
}

type MetaData {
  property String
  value    String
}

type Installment {
  available Boolean
  minWeight Float
  deadLine  Int
}

type Variant {
  variantId    Int
  variants     String[]
  wage         Float
  weight       Float
  quantity     Int
  weightUnit   String
  lockQuantity Int
  discount     Float
  installment  Installment
}

model Admin {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String @unique
  password     String
  permissions  String @default("[]")
  refreshToken String @default("")
}

type Limitation {
  startAt     String @default("00:00")
  endAt       String @default("00:00")
  weightLimit Float  @default(0)
}

model config {
  id                String       @id @default(auto()) @map("_id") @db.ObjectId
  goldPurchaseLimit Limitation[]
  minPrice          Int
  commission        Int
}

model goldTransaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @unique @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  date            DateTime @default(now())
  transactionType String   @default("")
  trackingCode    String
  weight          Float
  price           Int
  status          String
  paymentGateway  String
  details         String
}

model walletTransaction {
  id              String   @id @default(auto()) @map("_id") @db.ObjectId
  userId          String   @unique @db.ObjectId
  user            User     @relation(fields: [userId], references: [id])
  date            DateTime @default(now())
  transactionType String   @default("")
  expense         Int
  status          String
  paymentGateway  String
  title           String
  weight          Float
  quotation       Float
  details         String
}

model goldPrice {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  date          DateTime @default(now())
  buyQuotation  Int
  sellQuotation Int
  geram24       Int
  geram18       Int
}

model order {
  id         String         @id @default(auto()) @map("_id") @db.ObjectId
  date       DateTime       @default(now())
  userId     String         @db.ObjectId
  user       User           @relation(fields: [userId], references: [id])
  products   productOrder[]
  status     String
  type       String
  totalPrice Int
  paidPrice  Int?
  postageFee Int?
  deadLine   DateTime?
}

type productOrder {
  productId          String        @db.ObjectId
  variantId          Int
  count              Int?
  totalPurchasePrice Int?
  finalPurchasePrice Int?
  installments       installment[]
}

type installment {
  date   DateTime @default(now())
  weight Float    @default(0.000)
  price  Float    @default(0.000)
  wage   Float    @default(0.000)
}
